// Code generated by MockGen. DO NOT EDIT.
// Source: keeper-project/internal/store (interfaces: FileService)

// Package mock_store is a generated GoMock package.
package mocks

import (
	context "context"
	types "keeper-project/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFileService is a mock of FileService interface.
type MockFileService struct {
	ctrl     *gomock.Controller
	recorder *MockFileServiceMockRecorder
}

// MockFileServiceMockRecorder is the mock recorder for MockFileService.
type MockFileServiceMockRecorder struct {
	mock *MockFileService
}

// NewMockFileService creates a new mock instance.
func NewMockFileService(ctrl *gomock.Controller) *MockFileService {
	mock := &MockFileService{ctrl: ctrl}
	mock.recorder = &MockFileServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileService) EXPECT() *MockFileServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockFileService) Create(arg0 context.Context, arg1 string, arg2 types.CreateFileDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockFileServiceMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFileService)(nil).Create), arg0, arg1, arg2)
}

// Delete mocks base method.
func (m *MockFileService) Delete(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockFileServiceMockRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFileService)(nil).Delete), arg0, arg1, arg2)
}

// GetFile mocks base method.
func (m *MockFileService) GetFile(arg0 context.Context, arg1, arg2 string) (*types.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", arg0, arg1, arg2)
	ret0, _ := ret[0].(*types.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile.
func (mr *MockFileServiceMockRecorder) GetFile(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockFileService)(nil).GetFile), arg0, arg1, arg2)
}

// GetFilesList mocks base method.
func (m *MockFileService) GetFilesList(arg0 context.Context, arg1 string) ([]*types.Key, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilesList", arg0, arg1)
	ret0, _ := ret[0].([]*types.Key)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilesList indicates an expected call of GetFilesList.
func (mr *MockFileServiceMockRecorder) GetFilesList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilesList", reflect.TypeOf((*MockFileService)(nil).GetFilesList), arg0, arg1)
}
